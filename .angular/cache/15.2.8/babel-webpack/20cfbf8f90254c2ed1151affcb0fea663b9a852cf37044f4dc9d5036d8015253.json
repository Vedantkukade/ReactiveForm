{"ast":null,"code":"export const PasswordValidator = function (control) {\n  let value = control.value || '';\n  if (!value) {\n    return null;\n  }\n  let uppercase = /[A-Z]+/g;\n  if (uppercase.test(value) === false) {\n    return {\n      passwordstrength: 'Uppercase Required'\n    };\n  }\n  let lowercase = /[a-z]+/g;\n  if (lowercase.test(value) === false) {\n    return {\n      passwordstrength: 'Lowercase Required'\n    };\n  }\n  let numbers = /[0-9]+/g;\n  if (numbers.test(value) === false) {\n    return {\n      passwordstrength: 'Number Required'\n    };\n  }\n  let special = /[!@#$%^&*<>?/|\\\\[\\]/+=-_{}';\":.,`~]+/;\n  if (special.test(value) === false) {\n    return {\n      passwordstrength: 'Special Character Required'\n    };\n  }\n  return null;\n};","map":{"version":3,"mappings":"AAEA,OAAO,MAAMA,iBAAiB,GAAC,UAASC,OAAuB;EAE/D,IAAIC,KAAK,GAASD,OAAO,CAACC,KAAK,IAAI,EAAE;EAErC,IAAG,CAACA,KAAK,EAAC;IACN,OAAO,IAAI;;EAGf,IAAIC,SAAS,GAAC,SAAS;EACvB,IAAGA,SAAS,CAACC,IAAI,CAACF,KAAK,CAAC,KAAG,KAAK,EAAC;IAC7B,OAAO;MAACG,gBAAgB,EAAC;IAAoB,CAAC;;EAGlD,IAAIC,SAAS,GAAC,SAAS;EACvB,IAAGA,SAAS,CAACF,IAAI,CAACF,KAAK,CAAC,KAAG,KAAK,EAAC;IAC7B,OAAO;MAACG,gBAAgB,EAAC;IAAoB,CAAC;;EAGlD,IAAIE,OAAO,GAAC,SAAS;EACrB,IAAGA,OAAO,CAACH,IAAI,CAACF,KAAK,CAAC,KAAG,KAAK,EAAC;IAC3B,OAAO;MAACG,gBAAgB,EAAC;IAAiB,CAAC;;EAG/C,IAAIG,OAAO,GAAC,sCAAsC;EAClD,IAAGA,OAAO,CAACJ,IAAI,CAACF,KAAK,CAAC,KAAG,KAAK,EAAC;IAC3B,OAAO;MAACG,gBAAgB,EAAC;IAA4B,CAAC;;EAO1D,OAAO,IAAI;AAEX,CAAC","names":["PasswordValidator","control","value","uppercase","test","passwordstrength","lowercase","numbers","special"],"sourceRoot":"","sources":["C:\\Vedant\\Senwell\\Angular\\senwell\\reactiveform\\src\\app\\passwordvalidator.ts"],"sourcesContent":["import { AbstractControl,ValidationErrors } from \"@angular/forms\";\r\n\r\nexport const PasswordValidator=function(control:AbstractControl): ValidationErrors | any{\r\n\r\nlet value: string=control.value || '';\r\n\r\nif(!value){\r\n    return null;\r\n}\r\n\r\nlet uppercase=/[A-Z]+/g;\r\nif(uppercase.test(value)===false){\r\n    return {passwordstrength:'Uppercase Required'};\r\n}\r\n\r\nlet lowercase=/[a-z]+/g;\r\nif(lowercase.test(value)===false){\r\n    return {passwordstrength:'Lowercase Required'};\r\n}\r\n\r\nlet numbers=/[0-9]+/g;\r\nif(numbers.test(value)===false){\r\n    return {passwordstrength:'Number Required'}\r\n}\r\n\r\nlet special=/[!@#$%^&*<>?/|\\\\[\\]/+=-_{}';\":.,`~]+/;\r\nif(special.test(value)===false){\r\n    return {passwordstrength:'Special Character Required'};\r\n}\r\n\r\n\r\n\r\n\r\n\r\nreturn null;\r\n\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}